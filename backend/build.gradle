plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4' apply false
	id 'io.spring.dependency-management' version '1.1.7' apply false
}

group = 'com.micromarket'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

subprojects {
	apply plugin: 'java'

	repositories {
		mavenCentral()
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.4.4'
		compileOnly 'org.projectlombok:lombok:1.18.30'
		annotationProcessor 'org.projectlombok:lombok:1.18.30'
		testImplementation 'org.junit.jupiter:junit-jupiter'
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	}

	tasks.withType(Test).configureEach {
		useJUnitPlatform()
	}
}

project(':common') {
	dependencies {
		implementation "jakarta.persistence:jakarta.persistence-api:3.2.0"
		implementation 'org.apache.tomcat.embed:tomcat-embed-core:11.0.6'
	}
}

project(':core-service') {
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	dependencies {
		implementation project(':common')

		implementation 'org.springframework.boot:spring-boot-starter-web'
		runtimeOnly 'org.postgresql:postgresql'
		annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
	}
}

project(':payment-service') {
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	dependencies {
		implementation project(':common')

		implementation 'org.springframework.boot:spring-boot-starter-web'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
	}
}
